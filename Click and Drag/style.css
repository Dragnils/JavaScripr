html {
  box-sizing: border-box;
  background: url('https://source.unsplash.com/NFs6dRTBgaM/2000x2000') fixed;
  background-size: cover;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: sans-serif;
  font-size: 20px;
  margin: 0;
}

.items {
  height: 800px;
  padding: 100px;
  width: 100%;
  border: 1px solid white;
  overflow-x: scroll; /* управляет отображением содержания блочного элемента по горизонтали,
                       если контент целиком не помещается и выходит за область справа 
                       или слева от блока.  Всегда добавляется горизонтальная полоса прокрутки.*/ 
  overflow-y: hidden;/* Отображается только область внутри элемента, остальное будет скрыто. */
  white-space: nowrap; /*устанавливает, как отображать пробелы между словами.nowrap - Пробелы не 
                        учитываются, переносы строк в коде HTML игнорируются, весь текст 
                        отображается одной строкой; вместе с тем, добавление тега <br> переносит
                         текст на новую строку.*/
  user-select: none; /* Управляет поведением выделения текста и других элементов на странице. */
  cursor: pointer;
  transition: all 0.2s; /* Устанавливает эффект перехода между двумя состояниями элемента,
                           они могут быть определены с помощью псевдоэлемент */
  transform: scale(0.98); /* Масштаб элемента по горизонтали и вертикали. */
  will-change: transform;/* позволяет автору проинформировать браузер о том, какие изменения будут 
                          применены к элементу. Это позволяет браузеру заранее произвести необходимую
                           отптимизацию, выполнив потенциально тяжелые подготовительные операции до 
                           начала анимации. */
  position: relative;
  background: rgba(255,255,255,0.1);
  font-size: 0;
  perspective: 500px; /* Задает глубину просмотра, т.е. расстояние по оси Z. */
}

.items.active {
  background: rgba(255,255,255,0.3);
  cursor: grabbing;
  cursor: -webkit-grabbing;
  transform: scale(1); /* масштабируем при нажатии мыши */
}

.item {
  width: 200px;
  height: calc(100% - 40px);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 80px;
  font-weight: 100;
  color: rgba(0,0,0,0.15);
  box-shadow: inset 0 0 0 10px rgba(0,0,0,0.15);
}

.item:nth-child(9n+1) { background: dodgerblue;}
.item:nth-child(9n+2) { background: goldenrod;}
.item:nth-child(9n+3) { background: paleturquoise;}
.item:nth-child(9n+4) { background: gold;}
.item:nth-child(9n+5) { background: cadetblue;}
.item:nth-child(9n+6) { background: tomato;}
.item:nth-child(9n+7) { background: lightcoral;}
.item:nth-child(9n+8) { background: darkslateblue;}
.item:nth-child(9n+9) { background: rebeccapurple;}

.item:nth-child(even) { transform: scaleX(1.31) rotateY(40deg); }/* Все четные номера элементов. */
.item:nth-child(odd) { transform: scaleX(1.31) rotateY(-40deg); } /* Все нечетные номера элементов. */
